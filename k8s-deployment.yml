apiVersion: apps/v1
kind: Deployment
metadata:
  name: ping-server         # giving the label ping-server, to help with object referencing (necessary for load balancing)
spec:
  replicas: 1               # creating a few replicas of the same container
  selector:
    matchLabels:
      service: ping-server
  template:
    metadata:
      labels:
        service: ping-server
    spec:
      # volumes:
      #  - name: ping-server
      #    secret:
      #      secretName: ping-server-certs
      imagePullSecrets:
      - name: awsecr-cred
      containers:
      - name: ping-server
        image: 399029391937.dkr.ecr.ap-south-1.amazonaws.com/spintly/ping-server:latest     # added placeholder which Jenkins will update pre-deploy.      
        # volumeMounts:
        #  - mountPath: /app/certs
        #    name: identity-management
        #    readOnly: true
        imagePullPolicy: Always
        livenessProbe:
          initialDelaySeconds: 5   # start probing after some time (enough time to boot)
          periodSeconds: 30         # repeat the health check periodically
          httpGet:
            path: /a/health # check the health of the server
            port: 8080
        resources:
          requests:
            memory: "32Mi"   # memory request constraints on dev are restrictive.
            cpu: "100m"
          limits:
            memory: "256Mi"   # overprovision on prod to prevent out of memory issues. (kubernetes restarts out of memory pods)
            cpu: "500m"
        ports:
        - containerPort: 8080
        envFrom:              # obtain the ENV vars from a k8s secret
        - secretRef:
            name: ping-server
              
---

apiVersion: v1
kind: Service
metadata:
  name: ping-server
spec:
  ports:
    - port: 8080
      protocol: TCP
  type: NodePort
  selector:
    service: ping-server

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler     # using HPA to horizontally scale the services on load.
metadata:
  name: ping-server
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ping-server       # details of the deployment to autoscale
  minReplicas: 1
  maxReplicas: 2
  metrics:
  - type: Resource                # monitoring CPU usage metric to autoscale
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

